#!/usr/bin/python

# Removes warnings that occassionally show in imports
import warnings
warnings.filterwarnings('ignore')

import re
import os
import sys
import time
import glob

# Libraries for website scraping
from bs4 import BeautifulSoup
import requests
import urllib

def url_valid(url):
	"""
	Returns a boolean value checking if the url is valid

	The motivation is to see if the new program has been uploaded
	"""
	
	request = requests.get(url)
	return request.status_code == 200

def get_audio_url(url):
	"""
	Finds the audio url given a PBS Newshour page
	"""
	page = urllib.request.urlopen(url)
	page = BeautifulSoup(page)

	audio = page.find_all(text=re.compile('Listen to the Broadcast'))
	assert len(audio) == 1

	audio = [s.parent.parent.parent for s in audio]
	audio = audio[0]

	audio_url = audio.find("source")["src"]
	return audio_url

def replace_audio(audio_url, new_filename, file_prefix):
	page = urllib.request.urlopen(audio_url)
	with open(new_filename, "wb") as output:
		output.write(page.read())
		delete_old_audio(new_filename, file_prefix)

def delete_old_audio(new_filename, file_prefix):
	directory = new_filename.split("/")[:-1]
	directory = "/".join(directory)
	files = glob.glob(directory + "/*")
	for filename in files:
		if os.path.isdir(filename):
			continue
		if file_prefix in filename and filename != new_filename:
			os.remove(filename)

def get_program_url(head, day, program):
	url = None
	if url_valid(f"{head}/{day}-{program}"):
		url = f"{head}/{day}-{program}"
	elif url_valid(f"{head}/{program}-{day}"):
		url = f"{head}/{program}-{day}"
	return url

def get_program():
	if time.strftime("%w") in {"0", "6"}:
		program = "pbs-newshour-weekend-full-episode"
	else:
		program = "pbs-newshour-full-episode"
	return program

def main():
	day       = time.strftime("%B-%d-%Y").lower()
	directory = os.path.expanduser('~') + "/Desktop"
	file_prefix  = "PBS_Newshour"
	new_filename = f"{directory}/{file_prefix}_{day}.mp3"

	if os.path.isfile(new_filename):
			return

	url_head = "https://www.pbs.org/newshour/show"
	program  = get_program()
	url      = get_program_url(url_head, day, program)

	if url:
		audio_url = get_audio_url(url)
		replace_audio(audio_url, new_filename, file_prefix)
	else:
		print("Not uploaded yet")

if __name__ == "__main__":
	main()
